/*
**      CHSM Language System
**      src/java/tests/events2.chsmj
**
**      Copyright (C) 2004-2013  Paul J. Lucas & Fabio Riccardi
**
**      This program is free software; you can redistribute it and/or modify
**      it under the terms of the GNU General Public License as published by
**      the Free Software Foundation; either version 3 of the License, or
**      (at your option) any later version.
** 
**      This program is distributed in the hope that it will be useful,
**      but WITHOUT ANY WARRANTY; without even the implied warranty of
**      MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
**      GNU General Public License for more details.
** 
**      You should have received a copy of the GNU General Public License
**      along with this program.  If not, see <http://www.gnu.org/licenses/>.
*/

/**
 * @file
 * Tests that base/derived parameter blocks do not interfere.
 */

%%
///////////////////////////////////////////////////////////////////////////////

chsm<Test> events2_machine is {
  event alpha( int value );
  event<alpha> beta;

  set s(p,q) is {
    cluster p(a,b) is {
      state a {
        alpha -> b %{
          beta( 11 );
          //
          // Check that the broadcast of beta did not overwrite alpha's value.
          //
          if ( $param( alpha, value ) != 42 )
            exitCode = 2;
        %};
      }
      state b;
    }
    cluster q(a,b) is {
      state a {
        beta -> b %{
          //
          // Check that beta's value really was set.
          //
          if ( $param( beta, value ) != 11 )
            exitCode = 3;
          //
          // Now alpha's value should equal beta's value.
          //
          if ( $param( alpha, value ) != 11 )
            exitCode = 4;
        %};
      }
      state b;
    }
  }
}

///////////////////////////////////////////////////////////////////////////////
%%

class events2 {
  public static void main( String args[] ) {
    events2_machine m = new events2_machine();
    m.enter();
    m.alpha( 42 );

    if ( !( m.active() &&
            m.s.active() &&
            m.s.p.active() && !m.s.p.a.active() && m.s.p.b.active() &&
            m.s.q.active() && !m.s.q.a.active() && m.s.q.b.active()
    ) )
      Test.exitCode = 1;

    Test.printResult();
  }
}

///////////////////////////////////////////////////////////////////////////////
// vim:set et sw=2 ts=2 syntax=java:
