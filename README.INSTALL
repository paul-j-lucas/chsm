===============================================================================
Prerequisites for building the CHSM Language System
===============================================================================

The CHSM Language System has the following software as prerequisites:

1. A C++ compiler.  CHSM has been built using GNU C++ (g++) 4.x; older versions
   are not supported (in particular 2.x versions).  Other non-gcc ANSI C++
   compilers should work also.

2. A version of STL, the ANSI/ISO C++ Standard Template Library.  If you are
   using g++ or egcs, then you also need (the matching version of) libstd++.

   If you are not using g++, then you need to have a port of STL that works
   with your compiler.  Ports for various platforms are available from:

        http://www.stlport.org/

   For more about STL in general, see:

        http://www.cs.rpi.edu/~musser/stl.html
        http://www.sgi.com/Technology/STL/

3. A lexical analyzer generator.  CHSM has been built using GNU flex 2.5.4 and
   a typical Unix lex; flex is recommended since it's the same across all
   platforms (unlike lex) and produces faster code.

4. A parser generator.  CHSM has been built using GNU bison 1.28 and a typical
   Unix yacc.

5. GNU make 3.79.1 or later.

Only if you intend on using the Java port, you also need:

6. A Java compiler supporting version 1.5 of Java or later.

7. Apache Ant 1.7.0 or later.

All GNU software is freely available from:

	ftp://prep.ai.mit.edu/pub/gnu/

as well as many other mirror sites.


===============================================================================
Building the CHSM Language System
===============================================================================

1. Go to the "config" directory and edit the "config.mk" file as necessary.

2. Go back to the top-level directory and then either to the src/c++ or
   src/java subdirectory and type "make".  If everything works out, all the
   software will be built.

3. Go to the "bin" directory and edit either the "chsmc" (C++) or
   "chsmj" (Java) shell script making any necessary changes.

4. Go back to the top-level chsm directory and type "make test".  If everything
   built correctly, all of the tests will print "correct" after them.

5. Type "make install" to install.


===============================================================================
Notes
===============================================================================

1. Don't complain to me or bother asking me for help if you get either "No such
   file or directory" for or errors in the standard C++ headers.  It means that
   your C++ compiler and/or libraries are improperly installed.  I know nothing
   about your OS or how your system is (mis)configured.  Complain to your
   sysadmin: the person who botched the installation and whose job it is to fix
   it.

2. Don't bother asking me for precompiled binaries for a particular OS -- I
   don't have them.
