/*
**      CHSM Language System
**      src/java/tests/enter_once.chsmj
**
**      Copyright (C) 2004-2013  Paul J. Lucas & Fabio Riccardi
**
**      This program is free software; you can redistribute it and/or modify
**      it under the terms of the GNU General Public License as published by
**      the Free Software Foundation; either version 2 of the License, or
**      (at your option) any later version.
**
**      This program is distributed in the hope that it will be useful,
**      but WITHOUT ANY WARRANTY; without even the implied warranty of
**      MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
**      GNU General Public License for more details.
**
**      You should have received a copy of the GNU General Public License
**      along with this program; if not, write to the Free Software
**      Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
*/

class probe extends CHSM.State {
    public probe( CHSM_STATE_ARGS ) {
        super( CHSM_STATE_INIT );
    }

    public boolean enter( CHSM.Event e, CHSM.State fromState ) {
        //
        // If we are being entered directly, bypassing our parent, the call to
        // our inherited function is supposed to return false because we will
        // be entered later by our parent in due course.
        //
        if ( !super.enter( e, fromState ) )
            return false;
        //
        // This code is supposed to execute exactly once; if not, exitCode will
        // be non-zero.
        //
        ++Test.exitCode;

        return true;
    }
}

%%

// Tests that code in enter() is executed exactly once.

chsm<Test> enterOnce_chsm is {
    state a {
        alpha -> c.x;
    }
    cluster c(x) is {
        state<probe> x;
    }
}

%%

class enter_once {
    public static void main( String args[] ) {
        Test.exitCode = -1;

        enterOnce_chsm m = new enterOnce_chsm();
        m.enter();
        m.alpha();

        if ( !( m.active() &&
            !m.a.active() && m.c.active() && m.c.x.active()
        ) )
            Test.exitCode = 1;

        Test.printResult();
    }
}
// vim:set et sw=4 ts=4 syntax=java:
