/*
**      CHSM Language System
**      src/c++/examples/infinite.chsmc
**
**      Copyright (C) 1996-2013  Paul J. Lucas & Fabio Riccardi
**
**      This program is free software; you can redistribute it and/or modify
**      it under the terms of the GNU General Public License as published by
**      the Free Software Foundation; either version 2 of the License, or
**      (at your option) any later version.
**
**      This program is distributed in the hope that it will be useful,
**      but WITHOUT ANY WARRANTY; without even the implied warranty of
**      MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
**      GNU General Public License for more details.
**
**      You should have received a copy of the GNU General Public License
**      along with this program; if not, write to the Free Software
**      Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
*/

%%

// This results in an infinite loop due to the fact that we chose to use
// microsteps in our implementation.

chsm my_machine is {
    event x;
    event y;

    set S(L,R) is {
        cluster L(a,b) is {
            state a {
                x -> b %{ y(); %};
            }
            state b {
                x -> a %{ y(); %};
            }
        }
        cluster R(c,d) is {
            state c {
                y -> d %{ x(); %};
            }
            state d {
                y -> c %{ x(); %};
            }
        }
    }
}

%%

int main() {
    my_machine m;
    m.enter();

#ifdef DEBUG
    m.debug( CHSM::machine::D_all );
#endif

    m.x();

#ifdef DEBUG
    m.dump_state();
#endif
    return 0;
}
// vim:set et sw=4 ts=4 syntax=cpp:
